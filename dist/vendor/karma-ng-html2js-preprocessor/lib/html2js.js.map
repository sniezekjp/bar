{"version":3,"sources":["src/vendor/karma-ng-html2js-preprocessor/lib/html2js.js"],"names":[],"mappings":";;;AAAA,MAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;;AAG3B,MAAI,QAAQ,GAAG,8EAAkF,GAC7F,0CAA8C,GAC9C,QAAQ,CAAC;;AAEb,MAAI,iBAAiB,GAAG,uBAAuB,GAC3C,SAAS,GACT,oCAAsC,GACtC,iBAAiB,GACjB,wCAA0C,GAC1C,KAAK,GACL,4DAA8D,GAC9D,0CAA8C,GAC9C,QAAQ,GACR,SAAS,CAAC;;AAEd,MAAI,aAAa,GAAG,uBAAS,OAAO,EAAE;AACpC,WAAO,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,eAAiB,CAAC,CAAC;GAClG,CAAC;;AAEF,MAAI,yBAAyB,GAAG,mCAAS,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE;AACjE,UAAM,GAAG,OAAO,MAAM,KAAK,QAAQ,GAAG,MAAM,GAAG,EAAE,CAAC;;AAElD,QAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAChD,QAAI,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;AACnC,QAAI,WAAW,GAAG,IAAI,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,WAAW,IAAI,EAAE,CAAA,AAAC,CAAC,CAAC;AAC/D,QAAI,aAAa,GAAG,MAAM,CAAC,aAAa,IAAI,EAAE,CAAC;AAC/C,QAAI,UAAU,GAAG,IAAI,MAAM,CAAC,CAAC,MAAM,CAAC,UAAU,IAAI,EAAE,CAAA,GAAI,GAAG,CAAC,CAAC;AAC7D,QAAI,eAAe,GAAG,MAAM,IAAI,MAAM,CAAC,eAAe,IAAI,UAAS,QAAQ,EAAE;AAC3E,aAAO,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;KAClF,CAAC;;AAEF,QAAI,cAAc,GAAG,oCAAkC,CAAC;;AAExD,QAAG,MAAM,CAAC,cAAc,EAAE;AACxB,cAAQ,GAAG,cAAc,GAAG,QAAQ,CAAC;AACrC,uBAAiB,GAAG,cAAc,GAAG,iBAAiB,CAAC;KACxD;;AAED,WAAO,UAAS,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE;AACnC,SAAG,CAAC,KAAK,CAAC,oBAAkB,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;;AAEjD,UAAI,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC;;AAE9E,UAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AAC5B,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;OAC/B;;AAED,UAAI,UAAU,EAAE;AACd,YAAI,CAAC,IAAI,CAAC,MAAM,CAAC,iBAAiB,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OAChG,MAAM;AACL,YAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OACzE;KACF,CAAC;GACH,CAAC;;AAEF,2BAAyB,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,iBAAiB,EAAE,8BAA8B,CAAC,CAAC;;AAElG,QAAM,CAAC,OAAO,GAAG,yBAAyB,CAAC","file":"src/vendor/karma-ng-html2js-preprocessor/lib/html2js.js","sourcesContent":["var util = require('util');\n\n\nvar TEMPLATE = 'angular.module(\\'%s\\', []).run([\\'$templateCache\\', function($templateCache) {\\n' +\n    '  $templateCache.put(\\'%s\\',\\n    \\'%s\\');\\n' +\n    '}]);\\n';\n\nvar SINGLE_MODULE_TPL = '(function(module) {\\n' +\n    'try {\\n' +\n    '  module = angular.module(\\'%s\\');\\n' +\n    '} catch (e) {\\n' +\n    '  module = angular.module(\\'%s\\', []);\\n' +\n    '}\\n' +\n    'module.run([\\'$templateCache\\', function($templateCache) {\\n' +\n    '  $templateCache.put(\\'%s\\',\\n    \\'%s\\');\\n' +\n    '}]);\\n' +\n    '})();\\n';\n\nvar escapeContent = function(content) {\n  return content.replace(/\\\\/g, '\\\\\\\\').replace(/'/g, '\\\\\\'').replace(/\\r?\\n/g, '\\\\n\\' +\\n    \\'');\n};\n\nvar createHtml2JsPreprocessor = function(logger, basePath, config) {\n  config = typeof config === 'object' ? config : {};\n\n  var log = logger.create('preprocessor.html2js');\n  var moduleName = config.moduleName;\n  var stripPrefix = new RegExp('^' + (config.stripPrefix || ''));\n  var prependPrefix = config.prependPrefix || '';\n  var stripSufix = new RegExp((config.stripSufix || '') + '$');\n  var cacheIdFromPath = config && config.cacheIdFromPath || function(filepath) {\n    return prependPrefix + filepath.replace(stripPrefix, '').replace(stripSufix, '');\n  };\n\n  var requireAngular = 'import angular from \"angular\";\\n';\n\n  if(config.requireAngular) {\n    TEMPLATE = requireAngular + TEMPLATE;\n    SINGLE_MODULE_TPL = requireAngular + SINGLE_MODULE_TPL;\n  }\n\n  return function(content, file, done) {\n    log.debug('Processing \"%s\".', file.originalPath);\n\n    var htmlPath = cacheIdFromPath(file.originalPath.replace(basePath + '/', ''));\n\n    if (!/\\.js$/.test(file.path)) {\n      file.path = file.path + '.js';\n    }\n\n    if (moduleName) {\n      done(util.format(SINGLE_MODULE_TPL, moduleName, moduleName, htmlPath, escapeContent(content)));\n    } else {\n      done(util.format(TEMPLATE, htmlPath, htmlPath, escapeContent(content)));\n    }\n  };\n};\n\ncreateHtml2JsPreprocessor.$inject = ['logger', 'config.basePath', 'config.ngHtml2JsPreprocessor'];\n\nmodule.exports = createHtml2JsPreprocessor;\n"]}